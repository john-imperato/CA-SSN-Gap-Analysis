---
title: "California Sentinel Sites for Nature (CA-SSN) Gap Analysis"
format: 
  pdf:
    number-sections: false
    geometry:
      - top=0.75in
      - bottom=0.75in
      - left=0.75in
      - right=0.75in
    include-in-header:
      text: |
        \usepackage{fancyhdr}
        \pagestyle{empty}
        \thispagestyle{empty}
---

```{r setup, include=FALSE}
# Install and load all required packages
required_packages <- c(
  "sf", "janitor", "dplyr", "ggplot2", "RColorBrewer",
  "scales", "ggnewscale", "ggspatial", "gt", "tibble", "tidyr",
  "patchwork", "stringr", "knitr", "kableExtra", "rlang"
)

for (p in required_packages) {
  if (!requireNamespace(p, quietly = TRUE)) install.packages(p)
}

suppressPackageStartupMessages({
  library(sf); library(janitor); library(dplyr)
  library(ggplot2); library(RColorBrewer); library(scales)
  library(ggnewscale); library(ggspatial); library(gt); library(tibble)
  library(tidyr); library(patchwork); library(stringr); library(knitr)
  library(kableExtra); library(rlang)
})

# Direct absolute paths to data files
eco_gpkg   <- "/Users/johnimperato/Desktop/CA-SSN/CA-SSN-Gap-Analysis/data/processed/Ecoregions.gpkg"
sites_gpkg <- "/Users/johnimperato/Desktop/CA-SSN/CA-SSN-Gap-Analysis/data/processed/SSN_Sites_with_Ecoregions.gpkg"

# Verify files exist
if (!file.exists(eco_gpkg)) stop("Cannot find Ecoregions.gpkg at: ", eco_gpkg)
if (!file.exists(sites_gpkg)) stop("Cannot find SSN_Sites_with_Ecoregions.gpkg at: ", sites_gpkg)

# Load polygons (EPA L4 for CA) and clean names
eco <- sf::st_read(eco_gpkg, quiet = TRUE) |>
  janitor::clean_names() |>
  sf::st_make_valid()

# Load sites already joined to ecoregions in data prep
sites_with_eco <- sf::st_read(sites_gpkg, layer = "SSN_Sites_with_Ecoregions", quiet = TRUE) |>
  janitor::clean_names()

# Align CRS if needed
if (!is.na(sf::st_crs(sites_with_eco)) && !is.na(sf::st_crs(eco)) && 
    sf::st_crs(sites_with_eco) != sf::st_crs(eco)) {
  sites_with_eco <- sf::st_transform(sites_with_eco, sf::st_crs(eco))
}
```

# Introduction

**About the Sentinel Site Network (SSN)**

The California Sentinel Site Network (SSN) is a set of standardized biodiversity and climate monitoring sites. Four partners manage sites across the state: UCNRS, CDFW, TNC, and Pepperwood. Each site follows common field methods so we can compare trends across regions and partners.

**Why use EPA ecoregions**

EPA ecoregions group places with similar climate, soils, hydrology, landforms, and potential vegetation. The system is hierarchical: Level I represents continental patterns (broad realms); Level II shows sub-continental regions; Level III indicates major ecological regions within states (useful for statewide planning); and Level IV captures local subsections with finer variation (useful for site-level coverage).

For a California gap analysis, Level III shows which major ecological regions our network reaches, while Level IV shows which local subsections we cover or miss. We map both to see broad representation (L3) and fine-scale coverage (L4).

# CA-SSN Sites and US EPA Level III Ecoregions

```{r map-L3-SSN, message=FALSE, warning=FALSE, echo=FALSE, fig.width=7.5, fig.height=9.5, out.width="100%", fig.cap="California Sentinel Sites for Nature (CA-SSN) monitoring sites across 13 US EPA Level III ecoregions. Sites are shown by managing organization (CDFW, Pepperwood Preserve, TNC, UCNRS) and all 13 Level III ecoregions are covered by at least one sentinel site."}

# Ensure WGS84
if (st_crs(sites_with_eco)$epsg != 4326) sites_with_eco <- st_transform(sites_with_eco, 4326)
if (st_crs(eco)$epsg != 4326) eco <- st_transform(eco, 4326)

# Dissolve to Level III for clean fills
eco_l3 <- eco |> st_make_valid() |>
  group_by(us_l3code, us_l3name) |> summarise(.groups = "drop")

# Org palette for sites
org_levels <- sort(unique(as.character(sites_with_eco$org)))
org_palette <- if (length(org_levels) <= 9) {
  pal <- RColorBrewer::brewer.pal(max(3, length(org_levels)), "Set1")
  pal[seq_along(org_levels)]
} else scales::hue_pal()(length(org_levels))
names(org_palette) <- org_levels

ggplot() +
  geom_sf(data = eco_l3, aes(fill = us_l3name), color = NA, alpha = 0.80) +
  scale_fill_discrete(name = "US EPA Level III Ecoregion") +
  ggnewscale::new_scale_fill() +
  geom_sf(data = sites_with_eco, aes(fill = org), shape = 21, color = "black",
          stroke = 0.7, size = 3.6, alpha = 0.95) +
  scale_fill_manual(name = "CA Sentinel Sites", values = org_palette) +
  annotation_north_arrow(location = "bl", which_north = "true",
                         height = unit(1, "cm"), width = unit(0.75, "cm"),
                         pad_x = unit(0.8, "cm"), pad_y = unit(3, "cm"),
                         style = north_arrow_orienteering) +
  annotation_scale(location = "bl", width_hint = 0.25,
                   bar_cols = c("grey40", "white"),
                   pad_x = unit(0.4, "cm"), pad_y = unit(1.5, "cm"),
                   text_cex = 1) +
  coord_sf(expand = FALSE) + theme_void() +
  theme(legend.position = c(0.82, 0.78), legend.box = "vertical",
        legend.background = element_rect(fill = alpha("white", 0.8), color = NA),
        legend.title = element_text(size = 11, face = "bold"),
        legend.text = element_text(size = 9),
        legend.key.width = unit(.45, "cm"), legend.key.height = unit(.45, "cm"),
        legend.spacing.y = unit(0.08, "cm"), legend.spacing.x = unit(0.15, "cm"),
        plot.margin = unit(c(0.2, 0.2, 0.2, 0.2), "cm")) +
  guides(fill = guide_legend(override.aes = list(shape = 21, size = 4, 
                                                  color = "black", stroke = 0.7)))
```

```{r level3-table, echo=FALSE}
suppressPackageStartupMessages({
  library(dplyr); library(sf); library(knitr); library(kableExtra); library(rlang)
})

# Helper: ensure a normalized L3_name column exists
ensure_L3_name <- function(df, df_label = "data frame") {
  stopifnot(is.data.frame(df))
  cand <- c("L3_name","us_l3name","l3name","level_3_name","level3_name","l3_name","us_l3_name")
  nm <- names(df)
  hit <- nm[tolower(nm) %in% tolower(cand)]
  if (length(hit) == 0) {
    stop("Could not find a Level III name column in ", df_label)
  }
  df %>% mutate(L3_name = coalesce(!!!syms(hit)))
}

# Ensure L3_name exists in both objects
sites_with_eco <- ensure_L3_name(sites_with_eco, "sites_with_eco")
eco <- ensure_L3_name(eco, "eco")

# Build per-L3 list of sites
l3_sites <- sites_with_eco %>% st_drop_geometry() %>%
  filter(!is.na(L3_name)) %>%
  mutate(site_org = paste0(site_name, " (", org, ")")) %>%
  group_by(L3_name) %>%
  summarise(Sites = n_distinct(site_id),
            `Sentinel Sites` = paste(sort(unique(site_org)), collapse = "; "),
            .groups = "drop") %>%
  arrange(L3_name) %>%
  rename(`Level III Ecoregion` = L3_name)

# Totals for caption
l3_total <- eco %>% st_drop_geometry() %>% filter(!is.na(L3_name)) %>%
  distinct(L3_name) %>% nrow()
l3_covered <- nrow(l3_sites)

# Use kableExtra for better PDF rendering
l3_sites %>%
  kable(format = "latex", booktabs = TRUE, longtable = TRUE,
        caption = paste0("Level III Ecoregion Coverage: ", l3_covered, " of ", 
                        l3_total, " ecoregions covered by Sentinel Sites")) %>%
  kable_styling(latex_options = c("striped", "hold_position", "repeat_header"),
                font_size = 9, full_width = FALSE) %>%
  column_spec(1, width = "3.5cm") %>%
  column_spec(2, width = "1cm") %>%
  column_spec(3, width = "10cm") %>%
  row_spec(0, bold = TRUE)
```

# CA-SSN Sites and Level IV Ecoregions

```{r map-L4-SSN, message=FALSE, warning=FALSE, echo=FALSE, fig.width=7.5, fig.height=9.5, out.width="100%", fig.cap="California Sentinel Site Network (CA-SSN) monitoring sites by managing organization across 180 US EPA Level IV ecoregions. Level IV ecoregions provide finer ecological classification than Level III. See following pages for complete Level IV ecoregion legend."}
# Ensure WGS84
if (st_crs(sites_with_eco)$epsg != 4326) sites_with_eco <- st_transform(sites_with_eco, 4326)
if (st_crs(eco)$epsg != 4326) eco <- st_transform(eco, 4326)
# Dissolve to Level IV polygons
eco_l4 <- eco |> st_make_valid() |>
  dplyr::group_by(us_l4code, us_l4name) |>
  dplyr::summarise(.groups = "drop")
# Keyed color palette
l4_lookup <- eco_l4 |> st_drop_geometry() |>
  dplyr::distinct(us_l4code, us_l4name) |> dplyr::arrange(us_l4code)
pal_vals <- scales::hue_pal(l = 70, c = 100)(nrow(l4_lookup))
fill_colors <- stats::setNames(pal_vals, l4_lookup$us_l4code)
# Org palette (sites)
org_levels <- sort(unique(as.character(sites_with_eco$org)))
org_colors <- if (length(org_levels) <= 9) {
  pal <- RColorBrewer::brewer.pal(max(3, length(org_levels)), "Set1")
  pal[seq_along(org_levels)]
} else scales::hue_pal()(length(org_levels))
names(org_colors) <- org_levels
ggplot() +
  geom_sf(data = eco_l4, aes(fill = us_l4code), color = "gray50", 
          alpha = 0.85, show.legend = FALSE) +
  scale_fill_manual(values = fill_colors, breaks = l4_lookup$us_l4code, 
                    labels = l4_lookup$us_l4name) +
  ggnewscale::new_scale_fill() +
  geom_sf(data = sites_with_eco, aes(fill = org), shape = 21, color = "black",
          stroke = 0.7, size = 3.6, alpha = 0.96) +
  scale_fill_manual(name = "CA Sentinel Sites", values = org_colors) +
  annotation_north_arrow(location = "bl", which_north = "true",
                         height = unit(1, "cm"), width = unit(0.75, "cm"),
                         pad_x = unit(0.8, "cm"), pad_y = unit(3, "cm"),
                         style = north_arrow_orienteering) +
  annotation_scale(location = "bl", width_hint = 0.25,
                   bar_cols = c("grey40", "white"),
                   pad_x = unit(0.4, "cm"), pad_y = unit(1.5, "cm"),
                   text_cex = 1) +
  coord_sf(expand = FALSE) + theme_void() +
  theme(legend.position = c(0.82, 0.78), legend.box = "vertical",
        legend.background = element_rect(fill = alpha("white", 0.8), color = NA),
        legend.title = element_text(size = 11, face = "bold"),
        legend.text = element_text(size = 9),
        legend.key.width = unit(.45, "cm"), legend.key.height = unit(.45, "cm"),
        legend.spacing.y = unit(0.08, "cm"),
        plot.margin = unit(c(0.2, 0.2, 0.2, 0.2), "cm")) +
  guides(fill = guide_legend(override.aes = list(shape = 21, size = 4, 
                                                  color = "black", stroke = 0.7)))

```

```{r legend-L4-setup, echo=FALSE, include=FALSE}
# Setup chunk - must run first
eco_l4_full <- eco |> st_drop_geometry() |>
  distinct(us_l4code, us_l4name, us_l3name) |> arrange(us_l4code)

pal_vals_leg <- scales::hue_pal(l = 70, c = 100)(nrow(eco_l4_full))
fill_colors_leg <- stats::setNames(pal_vals_leg, eco_l4_full$us_l4code)

l4_df_leg <- eco_l4_full |> arrange(us_l3name, us_l4name) |>
  mutate(color = fill_colors_leg[us_l4code])

l3_counts_leg <- l4_df_leg |> count(us_l3name, name = "n_items") |>
  mutate(cumsum = cumsum(n_items))

split1 <- max(which(l3_counts_leg$cumsum <= 90))
page1_l3s <- l3_counts_leg$us_l3name[1:split1]
page2_l3s <- l3_counts_leg$us_l3name[(split1 + 1):nrow(l3_counts_leg)]

# Layout parameters
n_cols_leg <- 3
text_size_leg <- 2.8
header_size_leg <- 3.2
row_height_leg <- 0.18
swatch_width_leg <- 0.15
swatch_height_leg <- 0.15
label_dx_leg <- 0.20
col_spacing_leg <- 6
col_x_leg <- seq(0.5, by = col_spacing_leg, length.out = n_cols_leg)
max_rows_per_col_leg <- 60
```

```{r legend-L4-page1, echo=FALSE, fig.width=8, fig.height=10, out.width="100%", fig.cap="Legend for US EPA Level IV ecoregions in California (Part 1 of 2), organized by Level III ecoregion."}

l4_page <- l4_df_leg |> filter(us_l3name %in% page1_l3s)
current_row <- 0
current_col <- 1
plot_data <- list()

for (l3 in page1_l3s) {
  l3_items <- l4_page |> filter(us_l3name == l3)
  
  if (current_row > max_rows_per_col_leg && current_col < n_cols_leg) {
    current_col <- current_col + 1
    current_row <- 0
  }
  
  # Add header
  plot_data[[length(plot_data) + 1]] <- tibble(
    x = col_x_leg[current_col], 
    y = -current_row * row_height_leg, 
    label = l3, 
    color = NA_character_, 
    is_header = TRUE, 
    lx = col_x_leg[current_col]
  )
  current_row <- current_row + 1
  
  # Add items
  for (j in 1:nrow(l3_items)) {
    if (current_row > max_rows_per_col_leg && current_col < n_cols_leg) {
      current_col <- current_col + 1
      current_row <- 0
    }
    
    plot_data[[length(plot_data) + 1]] <- tibble(
      x = col_x_leg[current_col], 
      y = -current_row * row_height_leg, 
      label = l3_items$us_l4name[j], 
      color = l3_items$color[j], 
      is_header = FALSE, 
      lx = col_x_leg[current_col] + label_dx_leg
    )
    current_row <- current_row + 1
  }
  current_row <- current_row + 0.5
}

dat <- bind_rows(plot_data)

ggplot(dat) +
  geom_tile(
    data = dat |> filter(!is_header), 
    aes(x = x, y = y, fill = I(color)),
    width = swatch_width_leg, 
    height = swatch_height_leg,
    color = "grey40", 
    linewidth = 0.3
  ) +
  geom_text(
    data = dat |> filter(is_header), 
    aes(x = lx, y = y, label = label),
    hjust = 0, 
    vjust = 0.5, 
    size = header_size_leg, 
    fontface = "bold"
  ) +
  geom_text(
    data = dat |> filter(!is_header), 
    aes(x = lx, y = y, label = label),
    hjust = 0, 
    vjust = 0.5, 
    size = text_size_leg
  ) +
  coord_cartesian(
    xlim = c(0, 14), 
    ylim = c(min(dat$y) - 0.5, 0.5), 
    expand = FALSE
  ) +
  theme_void() + 
  theme(plot.margin = unit(c(0.3, 0.3, 0.3, 0.3), "cm"))
```

\newpage

```{r legend-L4-page2, echo=FALSE, fig.width=8, fig.height=10, out.width="100%", fig.cap="Legend for US EPA Level IV ecoregions in California (Part 2 of 2), organized by Level III ecoregion."}

l4_page <- l4_df_leg |> filter(us_l3name %in% page2_l3s)
current_row <- 0
current_col <- 1
plot_data <- list()

for (l3 in page2_l3s) {
  l3_items <- l4_page |> filter(us_l3name == l3)
  
  if (current_row > max_rows_per_col_leg && current_col < n_cols_leg) {
    current_col <- current_col + 1
    current_row <- 0
  }
  
  # Add header
  plot_data[[length(plot_data) + 1]] <- tibble(
    x = col_x_leg[current_col], 
    y = -current_row * row_height_leg, 
    label = l3, 
    color = NA_character_, 
    is_header = TRUE, 
    lx = col_x_leg[current_col]
  )
  current_row <- current_row + 1
  
  # Add items
  for (j in 1:nrow(l3_items)) {
    if (current_row > max_rows_per_col_leg && current_col < n_cols_leg) {
      current_col <- current_col + 1
      current_row <- 0
    }
    
    plot_data[[length(plot_data) + 1]] <- tibble(
      x = col_x_leg[current_col], 
      y = -current_row * row_height_leg, 
      label = l3_items$us_l4name[j], 
      color = l3_items$color[j], 
      is_header = FALSE, 
      lx = col_x_leg[current_col] + label_dx_leg
    )
    current_row <- current_row + 1
  }
  current_row <- current_row + 0.5
}

dat <- bind_rows(plot_data)

ggplot(dat) +
  geom_tile(
    data = dat |> filter(!is_header), 
    aes(x = x, y = y, fill = I(color)),
    width = swatch_width_leg, 
    height = swatch_height_leg,
    color = "grey40", 
    linewidth = 0.3
  ) +
  geom_text(
    data = dat |> filter(is_header), 
    aes(x = lx, y = y, label = label),
    hjust = 0, 
    vjust = 0.5, 
    size = header_size_leg, 
    fontface = "bold"
  ) +
  geom_text(
    data = dat |> filter(!is_header), 
    aes(x = lx, y = y, label = label),
    hjust = 0, 
    vjust = 0.5, 
    size = text_size_leg
  ) +
  coord_cartesian(
    xlim = c(0, 14), 
    ylim = c(min(dat$y) - 0.5, 0.5), 
    expand = FALSE
  ) +
  theme_void() + 
  theme(plot.margin = unit(c(0.3, 0.3, 0.3, 0.3), "cm"))
```

\newpage

# Explore Coverage and Identify Gaps

```{r coverage-summary, echo=FALSE}
# All unique ecoregions in California
all_L3 <- eco |> st_drop_geometry() |> distinct(us_l3code, us_l3name)
all_L4 <- eco |> st_drop_geometry() |> distinct(us_l4code, us_l4name)

# Ecoregions represented by at least one Sentinel Site
covered_L3 <- sites_with_eco |> st_drop_geometry() |>
  filter(!is.na(us_l3code)) |> distinct(us_l3code, us_l3name)
covered_L4 <- sites_with_eco |> st_drop_geometry() |>
  filter(!is.na(us_l4code)) |> distinct(us_l4code, us_l4name)

# Build summary table
summary_tbl <- tibble::tibble(
  Metric = c("Level III ecoregions", "Level IV ecoregions"),
  Covered = c(nrow(covered_L3), nrow(covered_L4)),
  Total = c(nrow(all_L3), nrow(all_L4)),
  Missing = c(nrow(all_L3) - nrow(covered_L3), nrow(all_L4) - nrow(covered_L4))
) |>
  mutate(Coverage = paste0(Covered, " of ", Total),
         `Missing ecoregions` = Missing) |>
  select(Metric, Coverage, `Missing ecoregions`)

summary_tbl |> gt() |>
  tab_header(title = md("**Sentinel Site coverage across US EPA ecoregions**"),
             subtitle = "Counts of Level III and IV ecoregions represented by at least one Sentinel Site") |>
  fmt_number(columns = "Missing ecoregions", decimals = 0) |>
  cols_align(align = "center", columns = everything()) |>
  cols_width(Metric ~ px(240), Coverage ~ px(140), `Missing ecoregions` ~ px(160))
```

```{r coverage-maps, echo=FALSE, fig.width=10, fig.height=5.5, out.width="100%", fig.cap="Spatial distribution of Level IV ecoregion coverage by CA-SSN sites. Left: ecoregions with at least one site (blue). Right: ecoregions without sites (orange)."}

# Build Level IV polygons
eco_l4 <- eco |> st_make_valid() |>
  dplyr::group_by(us_l4code, us_l4name) |>
  dplyr::summarise(.groups = "drop")

# Identify covered vs not covered
covered_codes <- sites_with_eco |> st_drop_geometry() |>
  dplyr::filter(!is.na(us_l4code)) |>
  dplyr::distinct(us_l4code) |> dplyr::pull(us_l4code)

eco_l4_status <- eco_l4 |>
  dplyr::mutate(coverage = ifelse(us_l4code %in% covered_codes, "Covered", "Not covered"))

cov_palette <- c("Covered" = "#2C7FB8", "Not covered" = "#D95F02")

base_theme <- list(coord_sf(expand = FALSE), theme_void(),
  theme(legend.position = "right",
        legend.title = element_text(size = 11, face = "bold"),
        legend.text = element_text(size = 10),
        plot.title = element_text(size = 14, face = "bold", hjust = 0)),
  guides(fill = guide_legend(override.aes = list(color = NA))))

p_cov <- ggplot() +
  geom_sf(data = eco_l4_status |> filter(coverage == "Not covered"),
          fill = "grey90", color = NA, alpha = 1) +
  geom_sf(data = eco_l4_status |> filter(coverage == "Covered"),
          aes(fill = coverage), color = NA, alpha = 0.9) +
  annotation_north_arrow(location = "bl", which_north = "true",
                         height = unit(0.9, "cm"), width = unit(0.9, "cm"),
                         pad_x = unit(0.8, "cm"), pad_y = unit(0.8, "cm"),
                         style = north_arrow_orienteering) +
  annotation_scale(location = "bl", width_hint = 0.25,
                   bar_cols = c("grey40", "white"),
                   pad_x = unit(0.8, "cm"), pad_y = unit(1.7, "cm"),
                   text_cex = 0.8) +
  scale_fill_manual(name = "Level IV coverage", values = cov_palette, drop = FALSE) +
  ggtitle("Covered Level IV ecoregions") + base_theme

p_gap <- ggplot() +
  geom_sf(data = eco_l4_status |> filter(coverage == "Covered"),
          fill = "grey90", color = NA, alpha = 1) +
  geom_sf(data = eco_l4_status |> filter(coverage == "Not covered"),
          aes(fill = coverage), color = NA, alpha = 0.9) +
  annotation_north_arrow(location = "bl", which_north = "true",
                         height = unit(0.9, "cm"), width = unit(0.9, "cm"),
                         pad_x = unit(0.8, "cm"), pad_y = unit(0.8, "cm"),
                         style = north_arrow_orienteering) +
  annotation_scale(location = "bl", width_hint = 0.25,
                   bar_cols = c("grey40", "white"),
                   pad_x = unit(0.8, "cm"), pad_y = unit(1.7, "cm"),
                   text_cex = 0.8) +
  scale_fill_manual(name = "Level IV coverage", values = cov_palette, drop = FALSE) +
  ggtitle("Not covered (gaps) Level IV ecoregions") + base_theme

(p_cov + p_gap) + plot_layout(guides = "collect") & theme(legend.position = "right")
```

\newpage

```{r coverage-table, echo=FALSE}
# All Level IV ecoregions
all_L4 <- eco |> st_drop_geometry() |> distinct(us_l4name) |> arrange(us_l4name)

# Covered Level IV
covered_L4 <- sites_with_eco |> st_drop_geometry() |>
  filter(!is.na(us_l4code)) |> distinct(us_l4name) |> arrange(us_l4name)

# Not covered (gaps)
gaps_L4 <- all_L4 |> anti_join(covered_L4, by = "us_l4name") |> arrange(us_l4name)

# Build two equal-length columns
covered_vec <- covered_L4$us_l4name
gaps_vec <- gaps_L4$us_l4name
n_max <- max(length(covered_vec), length(gaps_vec))
covered_vec <- c(covered_vec, rep(NA_character_, n_max - length(covered_vec)))
gaps_vec <- c(gaps_vec, rep(NA_character_, n_max - length(gaps_vec)))

tbl_L4 <- tibble::tibble(
  `Level IV ecoregions — Covered` = covered_vec,
  `Level IV ecoregions — Not covered` = gaps_vec
) |> mutate(across(everything(), ~replace_na(.x, "")))

# Summary
total_L4_display <- 180L
n_cov <- nrow(covered_L4)
n_gap <- nrow(gaps_L4)
pct_cov <- round(100 * n_cov / total_L4_display, 1)
pct_gap <- round(100 * n_gap / total_L4_display, 1)

tbl_L4 |> gt() |>
  tab_header(title = md("**Level IV Ecoregion Coverage**"),
             subtitle = md(paste0("**Covered:** ", n_cov, " / ", total_L4_display, 
                                 " (", pct_cov, "%)  •  **Not covered:** ", n_gap, 
                                 " / ", total_L4_display, " (", pct_gap, "%)"))) |>
  cols_align(columns = everything(), align = "left") |>
  cols_width(everything() ~ px(520)) |>
  tab_options(table.width = pct(100), data_row.padding = px(4),
              column_labels.font.weight = "bold")
```
